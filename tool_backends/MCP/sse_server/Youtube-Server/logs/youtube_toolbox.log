2025-08-31 07:55:33,227 - __main__ - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 07:55:33,284 - __main__ - INFO - Starting YouTube MCP server...
2025-08-31 07:57:45,631 - __main__ - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 07:57:45,679 - __main__ - INFO - Starting YouTube MCP server...
2025-08-31 07:59:08,005 - __main__ - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 07:59:08,052 - __main__ - INFO - Starting YouTube MCP server...
2025-08-31 08:04:28,595 - __main__ - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 08:04:28,644 - __main__ - INFO - Starting YouTube MCP server...
2025-08-31 08:08:00,602 - __main__ - ERROR - Error in search_videos: timed out
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 939, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 246, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1724, in request
    (response, content) = self._request(
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1444, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1366, in _conn_request
    conn.connect()
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1156, in connect
    sock.connect((self.host, self.port))
TimeoutError: timed out
2025-08-31 08:09:01,978 - __main__ - ERROR - Error in get_video_details: timed out
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 981, in get_video_details
    video_data = youtube_service.get_video_details(video_id)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 262, in get_video_details
    ).execute()
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1724, in request
    (response, content) = self._request(
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1444, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1366, in _conn_request
    conn.connect()
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1156, in connect
    sock.connect((self.host, self.port))
TimeoutError: timed out
2025-08-31 08:09:15,346 - __main__ - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 08:09:15,395 - __main__ - INFO - Starting YouTube MCP server...
2025-08-31 08:10:03,502 - __main__ - ERROR - Error in get_channel_details: timed out
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 1027, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_id)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 278, in get_channel_details
    ).execute()
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1724, in request
    (response, content) = self._request(
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1444, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1366, in _conn_request
    conn.connect()
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1156, in connect
    sock.connect((self.host, self.port))
TimeoutError: timed out
2025-08-31 08:10:39,690 - __main__ - ERROR - Error in search_videos: timed out
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 939, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 246, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1724, in request
    (response, content) = self._request(
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1444, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1366, in _conn_request
    conn.connect()
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1156, in connect
    sock.connect((self.host, self.port))
TimeoutError: timed out
2025-08-31 08:11:04,862 - __main__ - ERROR - Error in get_video_comments: timed out
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 1086, in get_video_comments
    comments_data = youtube_service.get_video_comments(video_id, max_results, **options)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 306, in get_video_comments
    response = self.youtube.commentThreads().list(**params).execute()
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1724, in request
    (response, content) = self._request(
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1444, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1366, in _conn_request
    conn.connect()
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1156, in connect
    sock.connect((self.host, self.port))
TimeoutError: timed out
2025-08-31 08:11:41,130 - __main__ - ERROR - Error in get_video_details: timed out
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 981, in get_video_details
    video_data = youtube_service.get_video_details(video_id)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 262, in get_video_details
    ).execute()
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1724, in request
    (response, content) = self._request(
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1444, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1366, in _conn_request
    conn.connect()
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1156, in connect
    sock.connect((self.host, self.port))
TimeoutError: timed out
2025-08-31 08:12:06,174 - __main__ - ERROR - Error in get_video_transcript: timed out
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 1149, in get_video_transcript
    video_data = youtube_service.get_video_details(video_id)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 262, in get_video_details
    ).execute()
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1724, in request
    (response, content) = self._request(
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1444, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1366, in _conn_request
    conn.connect()
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1156, in connect
    sock.connect((self.host, self.port))
TimeoutError: timed out
2025-08-31 08:13:07,518 - __main__ - ERROR - Error in get_related_videos: timed out
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 1222, in get_related_videos
    related_data = youtube_service.get_related_videos(video_id, max_results)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 352, in get_related_videos
    video_details = self.get_video_details(video_id)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 262, in get_video_details
    ).execute()
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1724, in request
    (response, content) = self._request(
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1444, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1366, in _conn_request
    conn.connect()
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1156, in connect
    sock.connect((self.host, self.port))
TimeoutError: timed out
2025-08-31 08:14:08,902 - __main__ - ERROR - Error in get_trending_videos: timed out
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 1266, in get_trending_videos
    trending_data = youtube_service.get_trending_videos(region_code, max_results)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 404, in get_trending_videos
    response = self.youtube.videos().list(**params).execute()
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1724, in request
    (response, content) = self._request(
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1444, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1366, in _conn_request
    conn.connect()
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1156, in connect
    sock.connect((self.host, self.port))
TimeoutError: timed out
2025-08-31 08:15:10,282 - __main__ - ERROR - Error processing transcript for video dQw4w9WgXcQ: timed out
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 468, in get_video_enhanced_transcript
    video_data = self.get_video_details(video_id)
  File "/mnt/tool_backends/MCP/server/Youtube-Server/server.py", line 262, in get_video_details
    ).execute()
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/usr/local/lib/python3.10/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1724, in request
    (response, content) = self._request(
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1444, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1366, in _conn_request
    conn.connect()
  File "/usr/local/lib/python3.10/site-packages/httplib2/__init__.py", line 1156, in connect
    sock.connect((self.host, self.port))
TimeoutError: timed out
2025-08-31 08:27:34,579 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 08:31:47,033 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 08:44:03,508 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 08:51:32,666 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 08:51:46,056 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 08:52:52,011 - server - ERROR - Error in search_videos: [Errno 104] Connection reset by peer
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 939, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 246, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
                    ~~~~~~~~~~~~~~^
        http,
        ^^^^^
    ...<7 lines>...
        headers=self.headers,
        ^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
                    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1722, in request
    (response, content) = self._request(
                          ~~~~~~~~~~~~~^
        conn, authority, uri, request_uri, method, body, headers, redirections, cachekey,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1442, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
                          ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1364, in _conn_request
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1200, in connect
    raise socket_err
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1156, in connect
    self.sock = self._context.wrap_socket(sock, server_hostname=self.host)
                ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer
2025-08-31 09:00:50,676 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 09:02:29,228 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 09:03:12,023 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 09:24:56,245 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 09:28:38,280 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 09:30:23,102 - server - ERROR - Error getting transcript for video dQw4w9WgXcQ: type object 'YouTubeTranscriptApi' has no attribute 'list_transcripts'
2025-08-31 09:30:48,887 - server - ERROR - Error getting transcript for video dQw4w9WgXcQ: type object 'YouTubeTranscriptApi' has no attribute 'list_transcripts'
2025-08-31 09:30:48,889 - server - ERROR - Error processing transcript for video dQw4w9WgXcQ: type object 'YouTubeTranscriptApi' has no attribute 'list_transcripts'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 485, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 341, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 320, in get_video_transcript
    transcript_list = YouTubeTranscriptApi.list_transcripts(video_id)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'YouTubeTranscriptApi' has no attribute 'list_transcripts'
2025-08-31 12:47:16,894 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 12:50:18,365 - server - ERROR - Error getting transcript for video dQw4w9WgXcQ: type object 'YouTubeTranscriptApi' has no attribute 'list_transcripts'
2025-08-31 12:50:18,367 - server - ERROR - Error processing transcript for video dQw4w9WgXcQ: type object 'YouTubeTranscriptApi' has no attribute 'list_transcripts'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 485, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 341, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 320, in get_video_transcript
    transcript_list = YouTubeTranscriptApi.list_transcripts(video_id)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'YouTubeTranscriptApi' has no attribute 'list_transcripts'
2025-08-31 12:56:19,515 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-08-31 13:04:47,560 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-01 10:21:58,537 - server - ERROR - Error getting transcript for video dQw4w9WgXcQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-01 10:22:01,285 - server - ERROR - Error getting transcript for video dQw4w9WgXcQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-01 10:22:01,293 - server - ERROR - Error processing transcript for video dQw4w9WgXcQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 485, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 341, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 320, in get_video_transcript
    transcript_list = YouTubeTranscriptApi().list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-01 10:23:02,555 - server - ERROR - Error getting transcript for video dQw4w9WgXcQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-01 10:23:05,562 - server - ERROR - Error getting transcript for video dQw4w9WgXcQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-01 10:23:05,568 - server - ERROR - Error processing transcript for video dQw4w9WgXcQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 485, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 341, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 320, in get_video_transcript
    transcript_list = YouTubeTranscriptApi().list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-01 10:23:30,086 - server - ERROR - Error getting transcript for video dQw4w9WgXcQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-01 10:23:32,717 - server - ERROR - Error getting transcript for video dQw4w9WgXcQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-01 10:23:32,722 - server - ERROR - Error processing transcript for video dQw4w9WgXcQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 485, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 341, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 320, in get_video_transcript
    transcript_list = YouTubeTranscriptApi().list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dQw4w9WgXcQ! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-07 06:57:50,454 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-08 02:23:05,159 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-08 07:01:04,086 - server - ERROR - Error getting transcript for video YWeEE9vchDo: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=YWeEE9vchDo! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 05:57:55,250 - server - ERROR - Error in search_videos: [Errno 104] Connection reset by peer
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1394, in _conn_request
    response = conn.getresponse()
  File "/root/miniconda3/lib/python3.13/http/client.py", line 1430, in getresponse
    response.begin()
    ~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/http/client.py", line 331, in begin
    version, status, reason = self._read_status()
                              ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/http/client.py", line 300, in _read_status
    raise RemoteDisconnected("Remote end closed connection without"
                             " response")
http.client.RemoteDisconnected: Remote end closed connection without response

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 939, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 246, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
                    ~~~~~~~~~~~~~~^
        http,
        ^^^^^
    ...<7 lines>...
        headers=self.headers,
        ^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
                    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1722, in request
    (response, content) = self._request(
                          ~~~~~~~~~~~~~^
        conn, authority, uri, request_uri, method, body, headers, redirections, cachekey,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1442, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
                          ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1403, in _conn_request
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1200, in connect
    raise socket_err
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1156, in connect
    self.sock = self._context.wrap_socket(sock, server_hostname=self.host)
                ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer
2025-09-09 06:07:30,482 - server - ERROR - Error getting transcript for video LjlaKH4yMu8: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=LjlaKH4yMu8! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 06:07:55,169 - server - ERROR - Error getting transcript for video 9mpGpezmZ8g: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=9mpGpezmZ8g! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 06:48:44,860 - server - ERROR - Error getting transcript for video Okj_3aFRgjA: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=Okj_3aFRgjA! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 07:00:21,958 - server - ERROR - Error getting transcript for video tGKOEOV35NY: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=tGKOEOV35NY! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 07:00:28,273 - server - ERROR - Error getting transcript for video Pm_Ag4ch524: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=Pm_Ag4ch524! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 07:06:10,424 - server - ERROR - Error getting transcript for video YWeEE9vchDo: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=YWeEE9vchDo! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 07:17:53,681 - server - ERROR - Error getting transcript for video YWeEE9vchDo: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=YWeEE9vchDo! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 07:25:43,677 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 07:30:39,634 - server - ERROR - Error searching videos: <HttpError 400 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Margo+Seltzer+Berkeley+DB&maxResults=5&type=video&publishedAfter=2005-01-01&publishedBefore=2010-12-31&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.
Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.". Details: "[{'message': "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.\nInvalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.", 'reason': 'invalid'}]">
2025-09-09 07:30:39,637 - server - ERROR - Error in search_videos: <HttpError 400 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Margo+Seltzer+Berkeley+DB&maxResults=5&type=video&publishedAfter=2005-01-01&publishedBefore=2010-12-31&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.
Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.". Details: "[{'message': "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.\nInvalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.", 'reason': 'invalid'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 939, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 250, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 246, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 400 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Margo+Seltzer+Berkeley+DB&maxResults=5&type=video&publishedAfter=2005-01-01&publishedBefore=2010-12-31&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.
Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.". Details: "[{'message': "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.\nInvalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.", 'reason': 'invalid'}]">
2025-09-09 07:31:04,095 - server - ERROR - Error getting transcript for video dpgKiz_pek8: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dpgKiz_pek8! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:20:59,173 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-09 08:23:14,124 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:34:49,681 - server - ERROR - Error getting transcript for video QAtePitAe9w: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QAtePitAe9w! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:35:15,911 - server - ERROR - Error getting transcript for video BNdMirtOvIA: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=BNdMirtOvIA! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:36:32,600 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:36:50,416 - server - ERROR - Error getting transcript for video QAtePitAe9w: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QAtePitAe9w! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:36:50,418 - server - ERROR - Error processing transcript for video QAtePitAe9w: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QAtePitAe9w! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 501, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 357, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 336, in get_video_transcript
    transcript_list = YouTubeTranscriptApi().list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QAtePitAe9w! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:37:34,123 - server - ERROR - Error getting transcript for video BNdMirtOvIA: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=BNdMirtOvIA! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:40:19,990 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:40:21,573 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:40:21,575 - server - ERROR - Error processing transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 501, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 357, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 336, in get_video_transcript
    transcript_list = YouTubeTranscriptApi().list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:40:29,505 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:40:31,297 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:40:31,299 - server - ERROR - Error processing transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 501, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 357, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 336, in get_video_transcript
    transcript_list = YouTubeTranscriptApi().list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking requests from your IP. This usually is due to one of the following reasons:
- You have done too many requests and your IP has been blocked by YouTube
- You are doing requests from an IP belonging to a cloud provider (like AWS, Google Cloud Platform, Azure, etc.). Unfortunately, most IPs from cloud providers are blocked by YouTube.

There are two things you can do to work around this:
1. Use proxies to hide your IP address, as explained in the "Working around IP bans" section of the README (https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#working-around-ip-bans-requestblocked-or-ipblocked-exception).
2. (NOT RECOMMENDED) If you authenticate your requests using cookies, you will be able to continue doing requests for a while. However, YouTube will eventually permanently ban the account that you have used to authenticate with! So only do this if you don't mind your account being banned!

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:48:07,008 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-09 08:49:08,226 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:49:08,233 - server - ERROR - Error processing transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 511, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 367, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 346, in get_video_transcript
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:54:32,850 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: HTTPSConnectionPool(host='www.youtube.com', port=443): Max retries exceeded with url: /watch?v=QtIlD6uxwwk (Caused by ProxyError('Unable to connect to proxy', RemoteDisconnected('Remote end closed connection without response')))
2025-09-09 08:54:34,690 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:54:34,692 - server - ERROR - Error processing transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 511, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 367, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 346, in get_video_transcript
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:55:03,262 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:55:04,365 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 08:55:04,368 - server - ERROR - Error processing transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 511, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 367, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 346, in get_video_transcript
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 09:08:22,621 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: HTTPSConnectionPool(host='www.youtube.com', port=443): Max retries exceeded with url: /watch?v=QtIlD6uxwwk (Caused by ProxyError('Unable to connect to proxy', RemoteDisconnected('Remote end closed connection without response')))
2025-09-09 09:09:39,058 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 09:09:40,256 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 09:09:40,260 - server - ERROR - Error processing transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 511, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 367, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 346, in get_video_transcript
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 09:10:01,789 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 09:10:03,087 - server - ERROR - Error getting transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 09:10:03,090 - server - ERROR - Error processing transcript for video QtIlD6uxwwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 511, in get_video_enhanced_transcript
    raw_transcript_data = self.get_video_transcript(video_id, language)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 367, in get_video_transcript
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 346, in get_video_transcript
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 373, in _fetch_captions_json
    raise exception.with_proxy_config(self._proxy_config)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 404, in _assert_playability
    raise RequestBlocked(video_id)
youtube_transcript_api._errors.RequestBlocked: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=QtIlD6uxwwk! This is most likely caused by:

YouTube is blocking your requests, despite you using proxies. Keep in mind that a proxy is just a way to hide your real IP behind the IP of that proxy, but there is no guarantee that the IP of that proxy won't be blocked as well.

The only truly reliable way to prevent IP blocks is rotating through a large pool of residential IPs, by using a provider like Webshare (https://www.webshare.io/?referral_code=w0xno53eb50g), which provides you with a pool of >30M residential IPs (make sure to purchase "Residential" proxies, NOT "Proxy Server" or "Static Residential"!).

You will find more information on how to easily integrate Webshare here: https://github.com/jdepoix/youtube-transcript-api?tab=readme-ov-file#using-webshare

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 09:49:20,617 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-09 11:40:03,359 - server - ERROR - No transcript available for video VPn_X5_9T-k: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=VPn_X5_9T-k! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-09 11:41:18,864 - server - ERROR - Error searching videos: <HttpError 400 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Ermera+coffee+Timor-Leste&maxResults=10&type=video&order=viewCount&publishedBefore=2016-12-31&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.". Details: "[{'message': "Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.", 'reason': 'invalid'}]">
2025-09-09 11:41:18,866 - server - ERROR - Error in search_videos: <HttpError 400 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Ermera+coffee+Timor-Leste&maxResults=10&type=video&order=viewCount&publishedBefore=2016-12-31&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.". Details: "[{'message': "Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.", 'reason': 'invalid'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 966, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 277, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 273, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 400 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Ermera+coffee+Timor-Leste&maxResults=10&type=video&order=viewCount&publishedBefore=2016-12-31&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.". Details: "[{'message': "Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.", 'reason': 'invalid'}]">
2025-09-10 04:59:14,285 - server - ERROR - No transcript available for video ZLxnC-u6HlA: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=ZLxnC-u6HlA! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (ZLxnC-u6HlA) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - uk ("Ukrainian (auto-generated)")[TRANSLATABLE]

(TRANSLATION LANGUAGES)
 - en ("English")

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 04:59:21,209 - server - ERROR - No transcript available for video LEZd2fVwAKQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=LEZd2fVwAKQ! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 05:05:08,620 - server - ERROR - Error getting transcript for video 41NVge3_cYo: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=41NVge3_cYo! This is most likely caused by:

YouTube is blocking your requests, despite you using Webshare proxies. Please make sure that you have purchased "Residential" proxies and NOT "Proxy Server" or "Static Residential", as those won't work as reliably! The free tier also uses "Proxy Server" and will NOT work!

The only reliable option is using "Residential" proxies (not "Static Residential"), as this allows you to rotate through a pool of over 30M IPs, which means you will always find an IP that hasn't been blocked by YouTube yet!

You can support the development of this open source project by making your Webshare purchases through this affiliate link: https://www.webshare.io/?referral_code=w0xno53eb50g 

Thank you for your support! <3

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 05:10:21,747 - server - ERROR - Error in get_video_details: [Errno 104] Connection reset by peer
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1394, in _conn_request
    response = conn.getresponse()
  File "/root/miniconda3/lib/python3.13/http/client.py", line 1430, in getresponse
    response.begin()
    ~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/http/client.py", line 331, in begin
    version, status, reason = self._read_status()
                              ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/http/client.py", line 300, in _read_status
    raise RemoteDisconnected("Remote end closed connection without"
                             " response")
http.client.RemoteDisconnected: Remote end closed connection without response

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 1008, in get_video_details
    video_data = youtube_service.get_video_details(video_id)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 289, in get_video_details
    ).execute()
      ~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 923, in execute
    resp, content = _retry_request(
                    ~~~~~~~~~~~~~~^
        http,
        ^^^^^
    ...<7 lines>...
        headers=self.headers,
        ^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 222, in _retry_request
    raise exception
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 191, in _retry_request
    resp, content = http.request(uri, method, *args, **kwargs)
                    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1722, in request
    (response, content) = self._request(
                          ~~~~~~~~~~~~~^
        conn, authority, uri, request_uri, method, body, headers, redirections, cachekey,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1442, in _request
    (response, content) = self._conn_request(conn, request_uri, method, body, headers)
                          ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1403, in _conn_request
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1200, in connect
    raise socket_err
  File "/root/miniconda3/lib/python3.13/site-packages/httplib2/__init__.py", line 1156, in connect
    self.sock = self._context.wrap_socket(sock, server_hostname=self.host)
                ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer
2025-09-10 05:10:28,443 - server - ERROR - Error getting transcript for video 6lUIXJD-lWo: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-10 06:06:48,557 - server - ERROR - No transcript available for video L7B3X6aXVzw: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=L7B3X6aXVzw! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 06:08:27,806 - server - ERROR - No transcript available for video L7B3X6aXVzw: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=L7B3X6aXVzw! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 09:44:45,398 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-10 10:12:19,984 - server - ERROR - No transcript available for video -owtH4m5zN8: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=-owtH4m5zN8! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 10:33:32,528 - server - ERROR - No transcript available for video DaAtbKfoTVQ: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=DaAtbKfoTVQ! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 10:34:28,708 - server - ERROR - No transcript available for video 4BERIyuIlBY: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=4BERIyuIlBY! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (4BERIyuIlBY) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - es ("Spanish (auto-generated)")[TRANSLATABLE]

(TRANSLATION LANGUAGES)
 - en ("English")

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 10:47:35,890 - server - ERROR - Error searching videos: <HttpError 400 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Bad+Bunny+2020+official+audio+video&maxResults=5&type=video&order=viewCount&publishedAfter=2020-01-01&publishedBefore=2020-12-31&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.
Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.". Details: "[{'message': "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.\nInvalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.", 'reason': 'invalid'}]">
2025-09-10 10:47:35,893 - server - ERROR - Error in search_videos: <HttpError 400 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Bad+Bunny+2020+official+audio+video&maxResults=5&type=video&order=viewCount&publishedAfter=2020-01-01&publishedBefore=2020-12-31&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.
Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.". Details: "[{'message': "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.\nInvalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.", 'reason': 'invalid'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 966, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 277, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 273, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 400 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Bad+Bunny+2020+official+audio+video&maxResults=5&type=video&order=viewCount&publishedAfter=2020-01-01&publishedBefore=2020-12-31&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.
Invalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.". Details: "[{'message': "Invalid value at 'published_after' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_after', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.\nInvalid value at 'published_before' (type.googleapis.com/google.protobuf.Timestamp), Field 'published_before', Illegal timestamp format; timestamps must end with 'Z' or have a valid timezone offset.", 'reason': 'invalid'}]">
2025-09-10 10:48:51,062 - server - ERROR - No transcript available for video Fyjw36TDm8g: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=Fyjw36TDm8g! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 10:54:36,733 - server - ERROR - No transcript available for video JHlUEJXaxfY: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=JHlUEJXaxfY! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 10:54:41,940 - server - ERROR - Error getting transcript for video Qn5z1x9N_jE: Response ended prematurely
2025-09-10 11:15:33,174 - server - ERROR - No transcript available for video LBntU9WD41Y: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=LBntU9WD41Y! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 11:16:00,008 - server - ERROR - No transcript available for video cOSiRv7IJqE: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=cOSiRv7IJqE! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 12:04:45,222 - server - ERROR - No transcript available for video a0kQBzmSKQA: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=a0kQBzmSKQA! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 12:24:25,438 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-10 13:33:48,262 - server - ERROR - No transcript available for video JHlUEJXaxfY: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=JHlUEJXaxfY! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 13:43:44,757 - server - ERROR - No transcript available for video zh0_sYvBPP4: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=zh0_sYvBPP4! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-10 13:47:04,641 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=What+is+Novotny+in+chess&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 13:47:04,643 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=What+is+Novotny+in+chess&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=What+is+Novotny+in+chess&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 13:50:08,975 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Leonard+Nimoy+Ray+Bradbury+There+Will+Come+Soft+Rains+Usher+II+LP&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 13:50:08,976 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Leonard+Nimoy+Ray+Bradbury+There+Will+Come+Soft+Rains+Usher+II+LP&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Leonard+Nimoy+Ray+Bradbury+There+Will+Come+Soft+Rains+Usher+II+LP&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 13:52:46,121 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Leonard+Nimoy+Usher+II+There+Will+Come+Soft+Rains&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 13:52:46,123 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Leonard+Nimoy+Usher+II+There+Will+Come+Soft+Rains&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Leonard+Nimoy+Usher+II+There+Will+Come+Soft+Rains&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:01:04,133 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Sam+Loyd+Indian+problem+mate+in+2&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:01:04,135 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Sam+Loyd+Indian+problem+mate+in+2&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Sam+Loyd+Indian+problem+mate+in+2&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:02:10,670 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Lito+Kirino+-+Somo+Lo+Fuerte+%28All+The+Way+Up%29&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:02:10,672 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Lito+Kirino+-+Somo+Lo+Fuerte+%28All+The+Way+Up%29&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Lito+Kirino+-+Somo+Lo+Fuerte+%28All+The+Way+Up%29&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:08:48,837 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Cardi+B+-+I+Like+It+official+music+video&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:08:48,839 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Cardi+B+-+I+Like+It+official+music+video&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Cardi+B+-+I+Like+It+official+music+video&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:12:30,843 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Plachutta+theme+chess+problem&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:12:30,845 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Plachutta+theme+chess+problem&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Plachutta+theme+chess+problem&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:13:13,243 - server - ERROR - Error getting related videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=What+is+%22PLACHUTTA%22&type=video&maxResults=10&videoCategoryId=24&relevanceLanguage=en&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:13:13,244 - server - ERROR - Error in get_related_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=What+is+%22PLACHUTTA%22&type=video&maxResults=10&videoCategoryId=24&relevanceLanguage=en&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 1263, in get_related_videos
    related_data = youtube_service.get_related_videos(video_id, max_results)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 407, in get_related_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 390, in get_related_videos
    ).execute()
      ~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=What+is+%22PLACHUTTA%22&type=video&maxResults=10&videoCategoryId=24&relevanceLanguage=en&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:14:43,334 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Cardi+B%2C+Bad+Bunny+%26+J+Balvin+-+I+Like+It+%5BOfficial+Music+Video%5D&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:14:43,335 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Cardi+B%2C+Bad+Bunny+%26+J+Balvin+-+I+Like+It+%5BOfficial+Music+Video%5D&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Cardi+B%2C+Bad+Bunny+%26+J+Balvin+-+I+Like+It+%5BOfficial+Music+Video%5D&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:19:13,373 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=The+Indian+Theme+In+Chess+%7C+Part%3A+1+Chess+Shaastra&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:19:13,374 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=The+Indian+Theme+In+Chess+%7C+Part%3A+1+Chess+Shaastra&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=The+Indian+Theme+In+Chess+%7C+Part%3A+1+Chess+Shaastra&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:30:24,408 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Cardi+B%2C+Bad+Bunny+%26+J+Balvin+-+I+Like+It+%5BOfficial+Music+Video%5D&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:30:24,409 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Cardi+B%2C+Bad+Bunny+%26+J+Balvin+-+I+Like+It+%5BOfficial+Music+Video%5D&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Cardi+B%2C+Bad+Bunny+%26+J+Balvin+-+I+Like+It+%5BOfficial+Music+Video%5D&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:35:09,421 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Anitta+%26+J+Balvin+-+Downtown&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:35:09,423 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Anitta+%26+J+Balvin+-+Downtown&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Anitta+%26+J+Balvin+-+Downtown&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:45:43,895 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Bad+Bunny+concierto+Coliseo+de+Puerto+Rico+2018&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:45:43,900 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Bad+Bunny+concierto+Coliseo+de+Puerto+Rico+2018&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Bad+Bunny+concierto+Coliseo+de+Puerto+Rico+2018&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:53:26,686 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=advection+PDF&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:53:26,689 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=advection+PDF&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=advection+PDF&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:54:05,925 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=advection+probability+density+PDF&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:54:05,927 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=advection+probability+density+PDF&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=advection+probability+density+PDF&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:54:30,189 - server - ERROR - Error getting video details: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=FJmIP0lw0aA&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 14:54:30,190 - server - ERROR - Error in get_video_details: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=FJmIP0lw0aA&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 1003, in get_video_details
    video_data = youtube_service.get_video_details(video_id)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 288, in get_video_details
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 284, in get_video_details
    ).execute()
      ~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=FJmIP0lw0aA&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 15:02:59,708 - server - ERROR - Error searching videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Paint+Rock+River+%28kayak+OR+paddling%29&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-10 15:02:59,710 - server - ERROR - Error in search_videos: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Paint+Rock+River+%28kayak+OR+paddling%29&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 961, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 272, in search_videos
    raise e
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/server.py", line 268, in search_videos
    response = self.youtube.search().list(**search_params).execute()
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/_helpers.py", line 130, in positional_wrapper
    return wrapped(*args, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/googleapiclient/http.py", line 938, in execute
    raise HttpError(resp, content, uri=self.uri)
googleapiclient.errors.HttpError: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=Paint+Rock+River+%28kayak+OR+paddling%29&maxResults=10&type=video&key=AIzaSyAydGzoQVpMlEWYX3dF-JDtXfoS9wDtIjg&alt=json returned "The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.". Details: "[{'message': 'The request cannot be completed because you have exceeded your <a href="/youtube/v3/getting-started#quota">quota</a>.', 'domain': 'youtube.quota', 'reason': 'quotaExceeded'}]">
2025-09-13 03:59:47,683 - server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-15 12:31:17,185 - __main__ - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-15 12:31:23,159 - __main__ - ERROR - Error getting transcript for video 3JZ_D3ELwOQ: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3D3JZ_D3ELwOQ&q=EgQ2__NuGJaOoMYGIjDJLSJAW3p8xtGdBTYYOmgjrLUN-p8fzz6RLZbXjuFXDa-L5nP3lyXyBfGgD_ygxZUyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))
2025-09-15 12:34:06,900 - __main__ - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-15 12:34:53,169 - __main__ - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-15 12:35:04,124 - new_new_server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-15 13:02:04,717 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Chicago+White+Sox+hitch+cover+chrome&api_key=93975f898457ed1a7dc5eba8712d5743a3194ee6aab8779f63478f3fa26c36fa&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Chicago+White+Sox+hitch+cover+chrome&api_key=93975f898457ed1a7dc5eba8712d5743a3194ee6aab8779f63478f3fa26c36fa&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 984, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 270, in search_videos
    resp=GoogleSearch(params).get_dict()
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Chicago+White+Sox+hitch+cover+chrome&api_key=93975f898457ed1a7dc5eba8712d5743a3194ee6aab8779f63478f3fa26c36fa&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-15 16:51:13,700 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 984, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 270, in search_videos
    resp=GoogleSearch(params).get_dict()
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-15 17:33:41,718 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=onion+devernalization&api_key=93975f898457ed1a7dc5eba8712d5743a3194ee6aab8779f63478f3fa26c36fa&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=onion+devernalization&api_key=93975f898457ed1a7dc5eba8712d5743a3194ee6aab8779f63478f3fa26c36fa&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 984, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 270, in search_videos
    resp=GoogleSearch(params).get_dict()
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=onion+devernalization&api_key=93975f898457ed1a7dc5eba8712d5743a3194ee6aab8779f63478f3fa26c36fa&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-15 17:47:23,442 - new_new_server - ERROR - No transcript available for video tHXFe3cZLh0: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=tHXFe3cZLh0! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-15 18:07:36,672 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-15 18:07:42,309 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-15 18:08:10,606 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 18:21:44,836 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-15 18:22:38,728 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 18:23:16,241 - new_new_server - ERROR - No transcript available for video tHXFe3cZLh0: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=tHXFe3cZLh0! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-15 18:24:40,970 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 18:25:57,945 - new_new_server - ERROR - No transcript available for video NGhcmdPCK-c: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=NGhcmdPCK-c! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-15 18:26:05,814 - new_new_server - ERROR - No transcript available for video alG-OUoA0Ho: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=alG-OUoA0Ho! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-15 18:45:27,967 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 18:46:01,311 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 18:53:00,979 - new_new_server - ERROR - No transcript available for video dswQr2-6kNM: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=dswQr2-6kNM! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-15 18:58:23,953 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 18:59:02,908 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 18:59:58,291 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 19:01:25,860 - new_new_server - ERROR - Error getting transcript for video 1234567890: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-15 19:22:39,730 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 19:22:42,504 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 19:43:35,102 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 19:47:16,131 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 19:52:39,061 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 19:52:43,934 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 20:00:04,108 - new_new_server - ERROR - No transcript available for video 6m03q0h-KIA: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=6m03q0h-KIA! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-15 20:02:53,616 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 20:04:54,952 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 20:22:53,765 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 20:23:00,525 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 20:34:26,709 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 20:42:12,116 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-15 20:43:30,601 - new_new_server - ERROR - No transcript available for video r2c3fxTLf-4: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=r2c3fxTLf-4! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-15 20:47:28,767 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Petronas+%26+KL+Tower%22&api_key=93975f898457ed1a7dc5eba8712d5743a3194ee6aab8779f63478f3fa26c36fa&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Petronas+%26+KL+Tower%22&api_key=93975f898457ed1a7dc5eba8712d5743a3194ee6aab8779f63478f3fa26c36fa&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 984, in search_videos
    search_results = youtube_service.search_videos(query, max_results, **options)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 270, in search_videos
    resp=GoogleSearch(params).get_dict()
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Petronas+%26+KL+Tower%22&api_key=93975f898457ed1a7dc5eba8712d5743a3194ee6aab8779f63478f3fa26c36fa&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-16 09:06:33,602 - __main__ - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-16 09:06:47,162 - new_new_server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-16 09:13:50,599 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-16 09:14:05,015 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-16 09:16:14,479 - new_new_server - ERROR - Error in get_channel_details: list index out of range
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1063, in get_channel_details
    channel_data = youtube_service.get_channel_details(channel_name)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 308, in get_channel_details
    resp=resp.get("channel_results", [])[0]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
2025-09-16 09:19:54,994 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=bJp9vJaT-TI&api_key=52733693aaab3b44e4c9fc21142509c4c03ec33d82a67181fe2dda9cdb39b184&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=bJp9vJaT-TI&api_key=52733693aaab3b44e4c9fc21142509c4c03ec33d82a67181fe2dda9cdb39b184&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1024, in get_video_details
    video_data = youtube_service.get_video_details(video_id)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 291, in get_video_details
    resp=GoogleSearch(parms).get_dict()
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=bJp9vJaT-TI&api_key=52733693aaab3b44e4c9fc21142509c4c03ec33d82a67181fe2dda9cdb39b184&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-16 09:21:24,024 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-16 09:21:31,550 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-16 09:40:21,279 - new_new_server - ERROR - No transcript available for video gfh1iCZFg5Y: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=gfh1iCZFg5Y! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-16 09:47:22,069 - new_new_server - ERROR - No transcript available for video gfh1iCZFg5Y: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=gfh1iCZFg5Y! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-16 16:30:46,266 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-16 16:31:11,853 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-16 16:48:24,469 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-16 16:48:57,738 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=kWJ_ZtYnnIA&api_key=52733693aaab3b44e4c9fc21142509c4c03ec33d82a67181fe2dda9cdb39b184&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=kWJ_ZtYnnIA&api_key=52733693aaab3b44e4c9fc21142509c4c03ec33d82a67181fe2dda9cdb39b184&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1024, in get_video_details
    video_data = youtube_service.get_video_details(video_id)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 291, in get_video_details
    resp=GoogleSearch(parms).get_dict()
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=kWJ_ZtYnnIA&api_key=52733693aaab3b44e4c9fc21142509c4c03ec33d82a67181fe2dda9cdb39b184&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 02:46:42,668 - new_new_server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-17 03:32:45,277 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 03:32:48,632 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 03:53:05,475 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=daS85IbuYhs&api_key=5293df08a3df94469e79c57c5c0408661f20d8927da76be3bfd850b48c2b14bd&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=daS85IbuYhs&api_key=5293df08a3df94469e79c57c5c0408661f20d8927da76be3bfd850b48c2b14bd&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1024, in get_video_details
    video_data = youtube_service.get_video_details(video_id)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 291, in get_video_details
    resp=GoogleSearch(parms).get_dict()
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=daS85IbuYhs&api_key=5293df08a3df94469e79c57c5c0408661f20d8927da76be3bfd850b48c2b14bd&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 04:08:12,482 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 06:24:53,777 - new_new_server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-17 11:29:29,782 - new_new_server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-17 13:16:38,538 - new_new_server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-17 14:43:45,737 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 14:50:09,547 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 14:50:09,634 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 14:50:14,242 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 14:50:14,348 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 14:50:52,512 - new_new_server - ERROR - No transcript available for video 5MTf-K3RDCI: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=5MTf-K3RDCI! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 14:57:03,190 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=GkoYkaUG3Bs&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=GkoYkaUG3Bs&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=GkoYkaUG3Bs&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 14:58:38,083 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:00:21,451 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Bean+%26+Crown%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Bean+%26+Crown%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Bean+%26+Crown%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 15:00:29,621 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 15:00:29,707 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 15:00:58,404 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Neil+Sturgeon+&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Neil+Sturgeon+&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Neil+Sturgeon+&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 15:04:02,212 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:12:06,407 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:17:18,886 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:17:59,204 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:23:07,397 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:48:06,535 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=HIHahqPO_-g&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=HIHahqPO_-g&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=HIHahqPO_-g&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 15:48:44,209 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:49:10,648 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:49:21,669 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:53:19,919 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:53:21,442 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 15:53:21,527 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 15:56:00,548 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Drum+%26+Bell+Tower+China+night+view&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Drum+%26+Bell+Tower+China+night+view&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Drum+%26+Bell+Tower+China+night+view&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 15:57:46,764 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 15:59:27,157 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 16:08:28,216 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 16:17:06,122 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22Big+Pants+%26+Bird%27s+Nest%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22Big+Pants+%26+Bird%27s+Nest%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22Big+Pants+%26+Bird%27s+Nest%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 16:17:44,863 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Pants+%26+Cube%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Pants+%26+Cube%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Pants+%26+Cube%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 16:26:16,188 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Asian+capital+Olympic+park+night+view+two+landmarks+west+bearing+400+meters&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Asian+capital+Olympic+park+night+view+two+landmarks+west+bearing+400+meters&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Asian+capital+Olympic+park+night+view+two+landmarks+west+bearing+400+meters&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 16:30:51,802 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 16:30:51,888 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 16:30:55,411 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 16:30:55,495 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 16:32:43,018 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 16:32:43,103 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 16:46:46,290 - new_new_server - ERROR - No transcript available for video 8KgAK0nqtOk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=8KgAK0nqtOk! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 16:49:54,996 - new_new_server - ERROR - No transcript available for video Mjf7Jg8r-kE: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=Mjf7Jg8r-kE! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 16:58:42,380 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 16:58:42,471 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 17:07:58,493 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Unity+Technologies&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Unity+Technologies&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Unity+Technologies&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 17:16:35,542 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=j2Wanders&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=j2Wanders&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=j2Wanders&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 17:16:52,244 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:17:29,970 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:17:40,018 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:17:45,806 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:17:48,659 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:17:51,857 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:17:54,479 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:17:57,915 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:01,851 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:05,306 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:09,919 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:13,585 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:17,478 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:21,347 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:27,078 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:35,392 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:43,243 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:46,463 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:49,826 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:52,654 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:18:55,643 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:19:01,110 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:21:46,472 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 17:21:46,560 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 17:21:50,915 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 17:21:50,994 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 17:24:34,939 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Bean+%26+Fountain&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Bean+%26+Fountain&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Bean+%26+Fountain&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 17:29:48,019 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Wandering+Soul&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Wandering+Soul&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Wandering+Soul&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 17:29:52,277 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 17:36:19,225 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Drew+Wibben&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Drew+Wibben&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Drew+Wibben&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 17:41:42,027 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%40DukeMBB&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%40DukeMBB&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%40DukeMBB&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 17:55:39,731 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 17:55:39,818 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 17:57:01,935 - new_new_server - ERROR - Error getting transcript for video QFNYHlDjvLs: Response ended prematurely
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1248, in read_chunked
    self._update_chunk_length()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1178, in _update_chunk_length
    raise ProtocolError("Response ended prematurely") from None
urllib3.exceptions.ProtocolError: Response ended prematurely

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 361, in _fetch_captions_json
    html = self._fetch_video_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 433, in _fetch_video_html
    html = self._fetch_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 442, in _fetch_html
    response = self._http_client.get(WATCH_URL.format(video_id=video_id))
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: Response ended prematurely
2025-09-17 17:57:02,318 - new_new_server - ERROR - Error in get_video_transcript tool: Response ended prematurely
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1248, in read_chunked
    self._update_chunk_length()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1178, in _update_chunk_length
    raise ProtocolError("Response ended prematurely") from None
urllib3.exceptions.ProtocolError: Response ended prematurely

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 361, in _fetch_captions_json
    html = self._fetch_video_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 433, in _fetch_video_html
    html = self._fetch_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 442, in _fetch_html
    response = self._http_client.get(WATCH_URL.format(video_id=video_id))
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: Response ended prematurely
2025-09-17 18:00:54,430 - new_new_server - ERROR - No transcript available for video _IV4TLW67xg: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=_IV4TLW67xg! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-17 18:01:23,780 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 18:01:52,654 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Three+Pools+Mirroring+the+Moon+%26+Leifeng+Pagoda&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Three+Pools+Mirroring+the+Moon+%26+Leifeng+Pagoda&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Three+Pools+Mirroring+the+Moon+%26+Leifeng+Pagoda&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 18:09:40,107 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-17 18:41:35,081 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 18:42:31,060 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 18:43:24,100 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 18:43:32,534 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 18:43:43,965 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-17 18:47:34,964 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Big+Ben+%26+The+Gherkin&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Big+Ben+%26+The+Gherkin&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Big+Ben+%26+The+Gherkin&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-17 18:55:08,720 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 17:11:11,271 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 17:12:05,594 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=+%2B+&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=+%2B+&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=+%2B+&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 17:15:22,289 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 17:15:22,369 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 17:16:20,596 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 17:23:17,642 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22+%26+%22+channel%3A%40palantirtech&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22+%26+%22+channel%3A%40palantirtech&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22+%26+%22+channel%3A%40palantirtech&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 17:24:45,477 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-18 17:24:54,085 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-18 17:29:08,245 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-18 17:30:46,125 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 17:32:18,238 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 17:32:39,361 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 17:42:41,812 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Christ+the+Redeemer+%26+Sugarloaf+Mountain&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Christ+the+Redeemer+%26+Sugarloaf+Mountain&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Christ+the+Redeemer+%26+Sugarloaf+Mountain&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 17:53:17,835 - new_new_server - ERROR - No transcript available for video Q1wEhrxNAW0: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=Q1wEhrxNAW0! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 17:56:11,411 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Bean+%26+Buckingham+Fountain&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Bean+%26+Buckingham+Fountain&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Bean+%26+Buckingham+Fountain&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 18:01:19,209 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Merlion+%26+Marina+Bay+Sands%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Merlion+%26+Marina+Bay+Sands%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Merlion+%26+Marina+Bay+Sands%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 18:06:04,025 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Jin+Mao+%26+SWFC&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Jin+Mao+%26+SWFC&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Jin+Mao+%26+SWFC&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 18:07:43,608 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 18:07:43,693 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 18:34:34,682 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Eiffel+Tower+%26+Statue+of+Liberty&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Eiffel+Tower+%26+Statue+of+Liberty&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Eiffel+Tower+%26+Statue+of+Liberty&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 18:36:22,896 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 18:36:22,981 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 18:44:35,042 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 18:44:35,126 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 18:52:00,239 - new_new_server - ERROR - Error in search_videos: ('Connection broken: IncompleteRead(6839 bytes read, 3401 more expected)', IncompleteRead(6839 bytes read, 3401 more expected))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 779, in _error_catcher
    yield
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1251, in read_chunked
    chunk = self._handle_chunk(amt)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1188, in _handle_chunk
    value = self._fp._safe_read(amt)  # type: ignore[union-attr]
  File "/root/miniconda3/lib/python3.13/http/client.py", line 644, in _safe_read
    raise IncompleteRead(data, amt-len(data))
http.client.IncompleteRead: IncompleteRead(6839 bytes read, 3401 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1231, in read_chunked
    with self._error_catcher():
         ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 806, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(6839 bytes read, 3401 more expected)', IncompleteRead(6839 bytes read, 3401 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(6839 bytes read, 3401 more expected)', IncompleteRead(6839 bytes read, 3401 more expected))
2025-09-18 18:54:01,929 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-18 18:56:44,591 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 18:56:44,674 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 18:57:51,791 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=6Gja_9Fyx1s&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=6Gja_9Fyx1s&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=6Gja_9Fyx1s&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 19:05:26,845 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=jHbHhnXG4Cg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=jHbHhnXG4Cg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=jHbHhnXG4Cg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 19:07:37,580 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=zSRra_GZ0_A&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=zSRra_GZ0_A&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=zSRra_GZ0_A&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 19:08:57,285 - new_new_server - ERROR - No transcript available for video i-izxUt_kNI: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=i-izxUt_kNI! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 19:23:29,944 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 19:24:01,681 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=sjSuAnZp6Rg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=sjSuAnZp6Rg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=sjSuAnZp6Rg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 19:24:35,356 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 19:24:40,554 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 19:47:41,079 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 19:47:41,164 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 19:55:21,601 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 20:10:44,958 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 20:14:16,425 - new_new_server - ERROR - Error in get_channel_details: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-18 20:25:03,873 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-18 20:52:15,096 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 20:52:15,177 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 21:02:43,019 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 21:02:43,124 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 21:08:53,009 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Big+Ben+%7C+London+Eye%22+night&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Big+Ben+%7C+London+Eye%22+night&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Big+Ben+%7C+London+Eye%22+night&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 21:13:35,804 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 21:13:35,884 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 21:15:10,859 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=+%7C+&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=+%7C+&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=+%7C+&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 21:21:50,023 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 21:21:50,107 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 21:22:04,327 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=Hlx46iOfAOc&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=Hlx46iOfAOc&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=Hlx46iOfAOc&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 21:34:28,157 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Driller+%26+BOK+Center+waterfront+park+night&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Driller+%26+BOK+Center+waterfront+park+night&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Driller+%26+BOK+Center+waterfront+park+night&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 21:58:33,688 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=SmartSheet&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=SmartSheet&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=SmartSheet&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-18 22:20:19,382 - new_new_server - ERROR - No transcript available for video HVQv9XYJFvI: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=HVQv9XYJFvI! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 22:20:33,583 - new_new_server - ERROR - No transcript available for video EKs8CC8kRBk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=EKs8CC8kRBk! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-18 22:24:33,909 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 22:24:35,720 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-18 22:26:07,343 - new_new_server - ERROR - Error getting transcript for video ZmvKghM72pU: ('Connection broken: IncompleteRead(4943 bytes read, 5297 more expected)', IncompleteRead(4943 bytes read, 5297 more expected))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 779, in _error_catcher
    yield
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1251, in read_chunked
    chunk = self._handle_chunk(amt)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1188, in _handle_chunk
    value = self._fp._safe_read(amt)  # type: ignore[union-attr]
  File "/root/miniconda3/lib/python3.13/http/client.py", line 644, in _safe_read
    raise IncompleteRead(data, amt-len(data))
http.client.IncompleteRead: IncompleteRead(4943 bytes read, 5297 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1231, in read_chunked
    with self._error_catcher():
         ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 806, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(4943 bytes read, 5297 more expected)', IncompleteRead(4943 bytes read, 5297 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 355, in _fetch
    return transcript.fetch()
           ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 137, in fetch
    response = self._http_client.get(self._url)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(4943 bytes read, 5297 more expected)', IncompleteRead(4943 bytes read, 5297 more expected))
2025-09-18 22:26:07,800 - new_new_server - ERROR - Error in get_video_transcript tool: ('Connection broken: IncompleteRead(4943 bytes read, 5297 more expected)', IncompleteRead(4943 bytes read, 5297 more expected))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 779, in _error_catcher
    yield
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1251, in read_chunked
    chunk = self._handle_chunk(amt)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1188, in _handle_chunk
    value = self._fp._safe_read(amt)  # type: ignore[union-attr]
  File "/root/miniconda3/lib/python3.13/http/client.py", line 644, in _safe_read
    raise IncompleteRead(data, amt-len(data))
http.client.IncompleteRead: IncompleteRead(4943 bytes read, 5297 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1231, in read_chunked
    with self._error_catcher():
         ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 806, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(4943 bytes read, 5297 more expected)', IncompleteRead(4943 bytes read, 5297 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 355, in _fetch
    return transcript.fetch()
           ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 137, in fetch
    response = self._http_client.get(self._url)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(4943 bytes read, 5297 more expected)', IncompleteRead(4943 bytes read, 5297 more expected))
2025-09-19 07:51:47,289 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Opera+House+%26+Harbour+Bridge&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Opera+House+%26+Harbour+Bridge&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Opera+House+%26+Harbour+Bridge&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 07:52:29,188 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-19 07:52:41,420 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-19 07:52:48,023 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-19 07:53:20,108 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Opera+House+%26+Harbour+Bridge%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by ProxyError('Unable to connect to proxy', RemoteDisconnected('Remote end closed connection without response')))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 534, in _make_request
    response = conn.getresponse()
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 565, in getresponse
    httplib_response = super().getresponse()
  File "/root/miniconda3/lib/python3.13/http/client.py", line 1430, in getresponse
    response.begin()
    ~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/http/client.py", line 331, in begin
    version, status, reason = self._read_status()
                              ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/http/client.py", line 300, in _read_status
    raise RemoteDisconnected("Remote end closed connection without"
                             " response")
http.client.RemoteDisconnected: Remote end closed connection without response

The above exception was the direct cause of the following exception:

urllib3.exceptions.ProxyError: ('Unable to connect to proxy', RemoteDisconnected('Remote end closed connection without response'))

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Opera+House+%26+Harbour+Bridge%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by ProxyError('Unable to connect to proxy', RemoteDisconnected('Remote end closed connection without response')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 694, in send
    raise ProxyError(e, request=request)
requests.exceptions.ProxyError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Opera+House+%26+Harbour+Bridge%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by ProxyError('Unable to connect to proxy', RemoteDisconnected('Remote end closed connection without response')))
2025-09-19 08:06:46,808 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:06:46,901 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:06:50,594 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:06:50,677 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:13:07,081 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 08:18:48,450 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 08:19:04,671 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Leigh+Blackmore&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Leigh+Blackmore&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Leigh+Blackmore&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 08:19:05,823 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 08:27:15,847 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-19 08:28:21,861 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:28:21,944 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:28:29,700 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:28:29,785 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:30:55,614 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:30:55,698 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:43:11,408 - new_new_server - ERROR - No transcript available for video wUTfS3ZW7Gk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=wUTfS3ZW7Gk! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:43:37,116 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=A+Scottish+Odyssey&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=A+Scottish+Odyssey&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=A+Scottish+Odyssey&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 08:48:03,989 - new_new_server - ERROR - Error in get_video_details: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-19 08:49:13,226 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=NGeBuGtaLfc&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by ProxyError('Unable to connect to proxy', RemoteDisconnected('Remote end closed connection without response')))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 534, in _make_request
    response = conn.getresponse()
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 565, in getresponse
    httplib_response = super().getresponse()
  File "/root/miniconda3/lib/python3.13/http/client.py", line 1430, in getresponse
    response.begin()
    ~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/http/client.py", line 331, in begin
    version, status, reason = self._read_status()
                              ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/http/client.py", line 300, in _read_status
    raise RemoteDisconnected("Remote end closed connection without"
                             " response")
http.client.RemoteDisconnected: Remote end closed connection without response

The above exception was the direct cause of the following exception:

urllib3.exceptions.ProxyError: ('Unable to connect to proxy', RemoteDisconnected('Remote end closed connection without response'))

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=NGeBuGtaLfc&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by ProxyError('Unable to connect to proxy', RemoteDisconnected('Remote end closed connection without response')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 694, in send
    raise ProxyError(e, request=request)
requests.exceptions.ProxyError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=NGeBuGtaLfc&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by ProxyError('Unable to connect to proxy', RemoteDisconnected('Remote end closed connection without response')))
2025-09-19 08:49:36,752 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=QSnk6J97tAI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=QSnk6J97tAI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=QSnk6J97tAI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 08:49:50,329 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=RnMynLft6To&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=RnMynLft6To&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=RnMynLft6To&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 08:50:27,722 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=Un1f0wHPd1E&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=Un1f0wHPd1E&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=Un1f0wHPd1E&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 08:54:22,321 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 08:54:27,611 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 08:58:13,749 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 08:58:13,833 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 09:02:22,443 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=oHquTZVpRBA&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=oHquTZVpRBA&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=oHquTZVpRBA&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 09:03:23,503 - new_new_server - ERROR - Error getting transcript for video 1234567890: Response ended prematurely
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1248, in read_chunked
    self._update_chunk_length()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1178, in _update_chunk_length
    raise ProtocolError("Response ended prematurely") from None
urllib3.exceptions.ProtocolError: Response ended prematurely

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 361, in _fetch_captions_json
    html = self._fetch_video_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 433, in _fetch_video_html
    html = self._fetch_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 442, in _fetch_html
    response = self._http_client.get(WATCH_URL.format(video_id=video_id))
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: Response ended prematurely
2025-09-19 09:03:23,908 - new_new_server - ERROR - Error in get_video_transcript tool: Response ended prematurely
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1248, in read_chunked
    self._update_chunk_length()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1178, in _update_chunk_length
    raise ProtocolError("Response ended prematurely") from None
urllib3.exceptions.ProtocolError: Response ended prematurely

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 361, in _fetch_captions_json
    html = self._fetch_video_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 433, in _fetch_video_html
    html = self._fetch_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 442, in _fetch_html
    response = self._http_client.get(WATCH_URL.format(video_id=video_id))
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: Response ended prematurely
2025-09-19 09:16:00,638 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=2gnFuG6kOXg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=2gnFuG6kOXg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=2gnFuG6kOXg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 09:23:36,803 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 09:28:03,663 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%E9%92%9F%E6%A5%BC%2B%E9%BC%93%E6%A5%BC+%E5%A4%9C%E6%99%AF&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%E9%92%9F%E6%A5%BC%2B%E9%BC%93%E6%A5%BC+%E5%A4%9C%E6%99%AF&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%E9%92%9F%E6%A5%BC%2B%E9%BC%93%E6%A5%BC+%E5%A4%9C%E6%99%AF&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 09:28:38,321 - new_new_server - ERROR - Error in get_video_details: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-19 09:30:13,340 - new_new_server - ERROR - Error in get_related_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=A2l8uPKWDSY&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=A2l8uPKWDSY&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1188, in get_related_videos
    related_data = await youtube_service.get_related_videos(video_id, max_results)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 391, in get_related_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=A2l8uPKWDSY&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 09:31:23,608 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 09:39:29,584 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 09:39:29,669 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 09:52:55,764 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 09:52:55,849 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 09:56:38,912 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 09:56:38,990 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 09:57:11,642 - new_new_server - ERROR - No transcript available for video LgbuhB1jhxU: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=LgbuhB1jhxU! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 10:40:04,037 - new_new_server - ERROR - Error getting transcript for video mblQtMIv4kQ: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DmblQtMIv4kQ&q=EgQSj5lEGIDmtMYGIjCSnMzXXLzd_qpipbSW4lyd2vVTbtIHQR_oMGDS1Ni_bmEVKSkj6ZKSFYMUQYHHpCwyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))
urllib3.exceptions.ResponseError: too many 429 error responses

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  [Previous line repeated 7 more times]
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 932, in urlopen
    retries = retries.increment(method, url, response=response, _pool=self)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DmblQtMIv4kQ&q=EgQSj5lEGIDmtMYGIjCSnMzXXLzd_qpipbSW4lyd2vVTbtIHQR_oMGDS1Ni_bmEVKSkj6ZKSFYMUQYHHpCwyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 361, in _fetch_captions_json
    html = self._fetch_video_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 433, in _fetch_video_html
    html = self._fetch_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 442, in _fetch_html
    response = self._http_client.get(WATCH_URL.format(video_id=video_id))
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 724, in send
    history = [resp for resp in gen]
                                ^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 265, in resolve_redirects
    resp = self.send(
        req,
    ...<6 lines>...
        **adapter_kwargs,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 691, in send
    raise RetryError(e, request=request)
requests.exceptions.RetryError: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DmblQtMIv4kQ&q=EgQSj5lEGIDmtMYGIjCSnMzXXLzd_qpipbSW4lyd2vVTbtIHQR_oMGDS1Ni_bmEVKSkj6ZKSFYMUQYHHpCwyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))
2025-09-19 10:40:04,622 - new_new_server - ERROR - Error in get_video_transcript tool: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DmblQtMIv4kQ&q=EgQSj5lEGIDmtMYGIjCSnMzXXLzd_qpipbSW4lyd2vVTbtIHQR_oMGDS1Ni_bmEVKSkj6ZKSFYMUQYHHpCwyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))
urllib3.exceptions.ResponseError: too many 429 error responses

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  [Previous line repeated 7 more times]
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 932, in urlopen
    retries = retries.increment(method, url, response=response, _pool=self)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DmblQtMIv4kQ&q=EgQSj5lEGIDmtMYGIjCSnMzXXLzd_qpipbSW4lyd2vVTbtIHQR_oMGDS1Ni_bmEVKSkj6ZKSFYMUQYHHpCwyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 361, in _fetch_captions_json
    html = self._fetch_video_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 433, in _fetch_video_html
    html = self._fetch_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 442, in _fetch_html
    response = self._http_client.get(WATCH_URL.format(video_id=video_id))
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 724, in send
    history = [resp for resp in gen]
                                ^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 265, in resolve_redirects
    resp = self.send(
        req,
    ...<6 lines>...
        **adapter_kwargs,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 691, in send
    raise RetryError(e, request=request)
requests.exceptions.RetryError: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DmblQtMIv4kQ&q=EgQSj5lEGIDmtMYGIjCSnMzXXLzd_qpipbSW4lyd2vVTbtIHQR_oMGDS1Ni_bmEVKSkj6ZKSFYMUQYHHpCwyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))
2025-09-19 11:08:32,517 - new_new_server - ERROR - No transcript available for video lovl5OH6Vkc: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=lovl5OH6Vkc! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:08:37,844 - new_new_server - ERROR - No transcript available for video rRYDp20U0wA: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=rRYDp20U0wA! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (rRYDp20U0wA) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - pt ("Portuguese (auto-generated)")[TRANSLATABLE]

(TRANSLATION LANGUAGES)
 - en ("English")

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:15:40,662 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 11:21:04,440 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=8nvoh0rgXYI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=8nvoh0rgXYI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=8nvoh0rgXYI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 11:25:58,943 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 11:26:07,610 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 11:26:30,605 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:26:30,710 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:26:35,622 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 11:29:08,135 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:29:08,220 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:32:17,113 - new_new_server - ERROR - No transcript available for video MEQy0JtBoS4: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=MEQy0JtBoS4! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:35:43,806 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:35:43,895 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:36:03,898 - new_new_server - ERROR - No transcript available for video Ec7RSSVuU-4: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=Ec7RSSVuU-4! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:46:06,836 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:46:06,921 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 11:55:37,095 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Sandy+OR+drive+4k&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Sandy+OR+drive+4k&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Sandy+OR+drive+4k&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:06:06,239 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=fxYBfGuVrvg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=fxYBfGuVrvg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=fxYBfGuVrvg&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:07:38,415 - new_new_server - ERROR - No transcript available for video xOy1bP2mi0c: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=xOy1bP2mi0c! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 12:07:54,318 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=WWG+Chargers+drone&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=WWG+Chargers+drone&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=WWG+Chargers+drone&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:15:22,487 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Canton+Tower+%26+Liede+Bridge&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Canton+Tower+%26+Liede+Bridge&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Canton+Tower+%26+Liede+Bridge&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:17:34,275 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Massachusetts+landmark+%26+landmark&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Massachusetts+landmark+%26+landmark&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Massachusetts+landmark+%26+landmark&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:18:56,900 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=AtA8rRg7LqA&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=AtA8rRg7LqA&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=AtA8rRg7LqA&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:21:20,430 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 12:22:56,381 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=spike+testing+OR+spike+test+OR+traffic+spike+%40cloudflare&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=spike+testing+OR+spike+test+OR+traffic+spike+%40cloudflare&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=spike+testing+OR+spike+test+OR+traffic+spike+%40cloudflare&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:23:35,823 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Walkie-Talkie+x+Shard%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Walkie-Talkie+x+Shard%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Walkie-Talkie+x+Shard%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:25:46,419 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=GULUaBwIAuc&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=GULUaBwIAuc&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=GULUaBwIAuc&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:26:50,940 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=3xRwhITBFuQ&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=3xRwhITBFuQ&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=3xRwhITBFuQ&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:34:10,297 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22Eiffel+Tower+-+Arc+de+Triomphe%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22Eiffel+Tower+-+Arc+de+Triomphe%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22Eiffel+Tower+-+Arc+de+Triomphe%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:45:38,265 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22Bottle+Opener%2FPearl%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22Bottle+Opener%2FPearl%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=intitle%3A%22Bottle+Opener%2FPearl%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:53:50,114 - new_new_server - ERROR - No transcript available for video 7WTjQY0V4qI: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=7WTjQY0V4qI! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 12:54:54,263 - new_new_server - ERROR - No transcript available for video 1_nkS41c2vs: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1_nkS41c2vs! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 12:56:23,492 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=zIkxpaH9Uts&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=zIkxpaH9Uts&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=zIkxpaH9Uts&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 12:57:55,311 - new_new_server - ERROR - Error in search_videos: ('Connection broken: IncompleteRead(4101 bytes read, 4085 more expected)', IncompleteRead(4101 bytes read, 4085 more expected))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 779, in _error_catcher
    yield
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1251, in read_chunked
    chunk = self._handle_chunk(amt)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1197, in _handle_chunk
    returned_chunk = self._fp._safe_read(self.chunk_left)  # type: ignore[union-attr]
  File "/root/miniconda3/lib/python3.13/http/client.py", line 644, in _safe_read
    raise IncompleteRead(data, amt-len(data))
http.client.IncompleteRead: IncompleteRead(4101 bytes read, 4085 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1231, in read_chunked
    with self._error_catcher():
         ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 806, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(4101 bytes read, 4085 more expected)', IncompleteRead(4101 bytes read, 4085 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(4101 bytes read, 4085 more expected)', IncompleteRead(4101 bytes read, 4085 more expected))
2025-09-19 12:58:55,099 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 12:58:55,183 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:01:30,828 - new_new_server - ERROR - Error in get_video_details: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-19 13:05:05,755 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:05:05,838 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:07:22,658 - new_new_server - ERROR - No transcript available for video McR4SL2sSZE: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=McR4SL2sSZE! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:08:59,412 - new_new_server - ERROR - No transcript available for video McR4SL2sSZE: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=McR4SL2sSZE! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:09:34,848 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:09:34,933 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:10:24,338 - new_new_server - ERROR - No transcript available for video 1_nkS41c2vs: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1_nkS41c2vs! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:10:42,951 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 13:13:49,524 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:13:49,620 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:13:54,421 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:13:54,505 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:17:10,293 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:17:10,377 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:21:32,380 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=a87fciqrN-A&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=a87fciqrN-A&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=a87fciqrN-A&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 13:24:27,282 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:24:27,365 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:37:16,286 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 13:44:51,111 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 13:47:48,500 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=A13tkPsdgwk&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=A13tkPsdgwk&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=A13tkPsdgwk&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 13:47:56,743 - new_new_server - ERROR - No transcript available for video A13tkPsdgwk: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=A13tkPsdgwk! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:48:08,401 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 13:48:20,444 - new_new_server - ERROR - Error getting transcript for video 1234567890: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:48:20,530 - new_new_server - ERROR - Error in get_video_transcript tool: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 364, in _fetch_captions_json
    return self._extract_captions_json(innertube_data, video_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 385, in _extract_captions_json
    self._assert_playability(innertube_data.get("playabilityStatus"), video_id)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 413, in _assert_playability
    raise VideoUnavailable(video_id)
youtube_transcript_api._errors.VideoUnavailable: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=1234567890! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-19 13:50:58,207 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-19 13:51:09,663 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=L3Uwq-zqMhU&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=L3Uwq-zqMhU&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=L3Uwq-zqMhU&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 14:08:26,958 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=rendering+technique+%26&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=rendering+technique+%26&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=rendering+technique+%26&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-19 14:12:08,730 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 10:24:56,876 - new_new_server - ERROR - No transcript available for video KjMY9DZLCDo: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=KjMY9DZLCDo! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (KjMY9DZLCDo) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - gu ("Gujarati (auto-generated)")

(TRANSLATION LANGUAGES)
None

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 10:24:58,838 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22queen+of+gaming%22+Chained+Together+September+2025+live&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22queen+of+gaming%22+Chained+Together+September+2025+live&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22queen+of+gaming%22+Chained+Together+September+2025+live&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 10:24:59,918 - new_new_server - ERROR - Error in get_video_details: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-22 10:25:18,044 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 10:25:30,879 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Jigar+Studio&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Jigar+Studio&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Jigar+Studio&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 10:25:57,307 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 10:25:57,641 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 10:27:20,542 - new_new_server - ERROR - No transcript available for video 9gWP3OIRKx4: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=9gWP3OIRKx4! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (9gWP3OIRKx4) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - hi ("Hindi (auto-generated)")

(TRANSLATION LANGUAGES)
None

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 10:27:32,226 - new_new_server - ERROR - No transcript available for video __tH9HCZUmc: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=__tH9HCZUmc! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (__tH9HCZUmc) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - hi ("Hindi (auto-generated)")

(TRANSLATION LANGUAGES)
None

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 10:27:53,180 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 10:38:06,227 - new_new_server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-09-22 11:56:18,702 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22gaming+chaos%22+%22Apex%22+Kenya+Seychelles&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22gaming+chaos%22+%22Apex%22+Kenya+Seychelles&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22gaming+chaos%22+%22Apex%22+Kenya+Seychelles&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 11:56:37,502 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 11:56:47,933 - new_new_server - ERROR - Error in get_video_comments: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=Vi9oj33D1rM&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SC1ZpOW9qMzNEMXJNGAYyVSIuIgtWaTlvajMzRDFyTTAAeAKqAhpVZ3hCY0VYUWF1THMzY2p3MFZsNEFhQUJBZzABQiFlbmdhZ2VtZW50LXBhbmVsLWNvbW1lbnRzLXNlY3Rpb24%253D (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=Vi9oj33D1rM&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SC1ZpOW9qMzNEMXJNGAYyVSIuIgtWaTlvajMzRDFyTTAAeAKqAhpVZ3hCY0VYUWF1THMzY2p3MFZsNEFhQUJBZzABQiFlbmdhZ2VtZW50LXBhbmVsLWNvbW1lbnRzLXNlY3Rpb24%253D (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1062, in get_video_comments
    comments_data = await youtube_service.get_video_comments(video_id, max_results)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 339, in get_video_comments
    full_resp = await self._serpapi_get(new_params)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=Vi9oj33D1rM&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SC1ZpOW9qMzNEMXJNGAYyVSIuIgtWaTlvajMzRDFyTTAAeAKqAhpVZ3hCY0VYUWF1THMzY2p3MFZsNEFhQUJBZzABQiFlbmdhZ2VtZW50LXBhbmVsLWNvbW1lbnRzLXNlY3Rpb24%253D (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 11:56:54,712 - new_new_server - ERROR - No transcript available for video KjMY9DZLCDo: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=KjMY9DZLCDo! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (KjMY9DZLCDo) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - gu ("Gujarati (auto-generated)")

(TRANSLATION LANGUAGES)
None

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 11:56:58,780 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=OUyzZ0hCye8&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=OUyzZ0hCye8&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=OUyzZ0hCye8&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 11:57:40,762 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22music+video+with+4+alternative+endings%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22music+video+with+4+alternative+endings%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22music+video+with+4+alternative+endings%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 11:57:54,370 - new_new_server - ERROR - No transcript available for video 275FexLuK7g: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=275FexLuK7g! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 11:58:04,027 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=September+2025+viral+video+earthquake&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=September+2025+viral+video+earthquake&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=September+2025+viral+video+earthquake&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 11:58:22,479 - new_new_server - ERROR - No transcript available for video ZULtK6iDxk8: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=ZULtK6iDxk8! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 11:59:44,305 - new_new_server - ERROR - No transcript available for video wK77nM_KjoM: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=wK77nM_KjoM! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 12:00:12,682 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 12:02:41,434 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Bobert&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Bobert&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Bobert&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 12:02:50,317 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 12:02:54,652 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 12:03:43,400 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 12:03:55,384 - new_new_server - ERROR - Error in get_video_comments: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=mjHGUzKKYh4&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=mjHGUzKKYh4&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1062, in get_video_comments
    comments_data = await youtube_service.get_video_comments(video_id, max_results)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 326, in get_video_comments
    initial_resp = await self._serpapi_get(params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=mjHGUzKKYh4&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 12:04:17,206 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Telugu+Bhakti+24x7&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Telugu+Bhakti+24x7&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Telugu+Bhakti+24x7&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 12:04:28,313 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 12:05:19,769 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 12:05:25,005 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Crystal%2C+Lily%2C+Megan%2C+Roxy%2C+and+Kevin%22+video+description&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Crystal%2C+Lily%2C+Megan%2C+Roxy%2C+and+Kevin%22+video+description&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Crystal%2C+Lily%2C+Megan%2C+Roxy%2C+and+Kevin%22+video+description&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 12:05:52,767 - new_new_server - ERROR - No transcript available for video z9JPufjBI6o: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=z9JPufjBI6o! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (z9JPufjBI6o) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - hi ("Hindi (auto-generated)")

(TRANSLATION LANGUAGES)
None

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 12:06:48,715 - new_new_server - ERROR - No transcript available for video XNCVbqz8oLE: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=XNCVbqz8oLE! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (XNCVbqz8oLE) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - ar ("Arabic (auto-generated)")

(TRANSLATION LANGUAGES)
None

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 12:07:09,871 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=qZZsU5dLdtI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=qZZsU5dLdtI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=qZZsU5dLdtI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 12:07:34,669 - new_new_server - ERROR - No transcript available for video qZZsU5dLdtI: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=qZZsU5dLdtI! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (qZZsU5dLdtI) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - ta ("Tamil (auto-generated)")

(TRANSLATION LANGUAGES)
None

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 12:10:33,711 - new_new_server - ERROR - Error in search_videos: ('Connection broken: IncompleteRead(5470 bytes read, 2716 more expected)', IncompleteRead(5470 bytes read, 2716 more expected))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 779, in _error_catcher
    yield
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1251, in read_chunked
    chunk = self._handle_chunk(amt)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1197, in _handle_chunk
    returned_chunk = self._fp._safe_read(self.chunk_left)  # type: ignore[union-attr]
  File "/root/miniconda3/lib/python3.13/http/client.py", line 644, in _safe_read
    raise IncompleteRead(data, amt-len(data))
http.client.IncompleteRead: IncompleteRead(5470 bytes read, 2716 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1231, in read_chunked
    with self._error_catcher():
         ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 806, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(5470 bytes read, 2716 more expected)', IncompleteRead(5470 bytes read, 2716 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(5470 bytes read, 2716 more expected)', IncompleteRead(5470 bytes read, 2716 more expected))
2025-09-22 12:10:35,675 - new_new_server - ERROR - No transcript available for video JlNE_jifg-M: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=JlNE_jifg-M! This is most likely caused by:

No transcripts were found for any of the requested language codes: ['en']

For this video (JlNE_jifg-M) transcripts are available in the following languages:

(MANUALLY CREATED)
None

(GENERATED)
 - ta ("Tamil (auto-generated)")

(TRANSLATION LANGUAGES)
None

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-22 13:00:50,080 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-22 13:01:43,706 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=channel+%22Birds%22+OR+%22Dogs%22+OR+%22Cats%22+OR+%22Pigeons%22+Chicago+Millennium+Park&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=channel+%22Birds%22+OR+%22Dogs%22+OR+%22Cats%22+OR+%22Pigeons%22+Chicago+Millennium+Park&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=channel+%22Birds%22+OR+%22Dogs%22+OR+%22Cats%22+OR+%22Pigeons%22+Chicago+Millennium+Park&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 13:11:51,919 - new_new_server - ERROR - Error in search_videos: Response ended prematurely
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1248, in read_chunked
    self._update_chunk_length()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1178, in _update_chunk_length
    raise ProtocolError("Response ended prematurely") from None
urllib3.exceptions.ProtocolError: Response ended prematurely

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: Response ended prematurely
2025-09-22 13:12:33,451 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Presenting+the+X+and+collection&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Presenting+the+X+and+collection&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Presenting+the+X+and+collection&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 13:12:41,045 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 13:13:35,005 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 13:13:50,703 - new_new_server - ERROR - Error in search_videos: ('Connection broken: IncompleteRead(1363 bytes read, 5867 more expected)', IncompleteRead(1363 bytes read, 5867 more expected))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 779, in _error_catcher
    yield
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1251, in read_chunked
    chunk = self._handle_chunk(amt)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1197, in _handle_chunk
    returned_chunk = self._fp._safe_read(self.chunk_left)  # type: ignore[union-attr]
  File "/root/miniconda3/lib/python3.13/http/client.py", line 644, in _safe_read
    raise IncompleteRead(data, amt-len(data))
http.client.IncompleteRead: IncompleteRead(1363 bytes read, 5867 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1231, in read_chunked
    with self._error_catcher():
         ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 806, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(1363 bytes read, 5867 more expected)', IncompleteRead(1363 bytes read, 5867 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(1363 bytes read, 5867 more expected)', IncompleteRead(1363 bytes read, 5867 more expected))
2025-09-22 13:16:40,154 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Fountain%7CSkyline%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Fountain%7CSkyline%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Fountain%7CSkyline%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 13:23:44,685 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Tom+%26+Quad%22+OR+%22Tom+-+Quad%22+Christ+Church&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Tom+%26+Quad%22+OR+%22Tom+-+Quad%22+Christ+Church&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Tom+%26+Quad%22+OR+%22Tom+-+Quad%22+Christ+Church&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 15:25:18,211 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=9gWP3OIRKx4&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=9gWP3OIRKx4&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=9gWP3OIRKx4&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 15:25:23,478 - new_new_server - ERROR - Error getting transcript for video V9vuCByb6js: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 363, in _fetch_captions_json
    innertube_data = self._fetch_innertube_data(video_id, api_key)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 446, in _fetch_innertube_data
    response = self._http_client.post(
        INNERTUBE_API_URL.format(api_key=api_key),
    ...<3 lines>...
        },
    )
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 637, in post
    return self.request("POST", url, data=data, json=json, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-22 15:25:24,278 - new_new_server - ERROR - Error in get_video_transcript tool: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 363, in _fetch_captions_json
    innertube_data = self._fetch_innertube_data(video_id, api_key)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 446, in _fetch_innertube_data
    response = self._http_client.post(
        INNERTUBE_API_URL.format(api_key=api_key),
    ...<3 lines>...
        },
    )
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 637, in post
    return self.request("POST", url, data=data, json=json, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-22 16:18:34,278 - new_new_server - ERROR - Error in get_video_comments: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=jJoH5yeIJQI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SC2pKb0g1eWVJSlFJGAYyVSIuIgtqSm9INXllSUpRSTAAeAKqAhpVZ3ljdU9qOURTS0JlMU9BODVONEFhQUJBZzABQiFlbmdhZ2VtZW50LXBhbmVsLWNvbW1lbnRzLXNlY3Rpb24%253D (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=jJoH5yeIJQI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SC2pKb0g1eWVJSlFJGAYyVSIuIgtqSm9INXllSUpRSTAAeAKqAhpVZ3ljdU9qOURTS0JlMU9BODVONEFhQUJBZzABQiFlbmdhZ2VtZW50LXBhbmVsLWNvbW1lbnRzLXNlY3Rpb24%253D (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1062, in get_video_comments
    comments_data = await youtube_service.get_video_comments(video_id, max_results)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 339, in get_video_comments
    full_resp = await self._serpapi_get(new_params)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=jJoH5yeIJQI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SC2pKb0g1eWVJSlFJGAYyVSIuIgtqSm9INXllSUpRSTAAeAKqAhpVZ3ljdU9qOURTS0JlMU9BODVONEFhQUJBZzABQiFlbmdhZ2VtZW50LXBhbmVsLWNvbW1lbnRzLXNlY3Rpb24%253D (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 16:18:56,672 - new_new_server - ERROR - Error in get_video_comments: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=9RB-jYEbLUU&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SCzlSQi1qWUViTFVVGAYyVSIuIgs5UkItallFYkxVVTAAeAKqAhpVZ3gtRnhWVl91V0NONThjMEhCNEFhQUJBZzABQiFlbmdhZ2VtZW50LXBhbmVsLWNvbW1lbnRzLXNlY3Rpb24%253D (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=9RB-jYEbLUU&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SCzlSQi1qWUViTFVVGAYyVSIuIgs5UkItallFYkxVVTAAeAKqAhpVZ3gtRnhWVl91V0NONThjMEhCNEFhQUJBZzABQiFlbmdhZ2VtZW50LXBhbmVsLWNvbW1lbnRzLXNlY3Rpb24%253D (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1062, in get_video_comments
    comments_data = await youtube_service.get_video_comments(video_id, max_results)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 339, in get_video_comments
    full_resp = await self._serpapi_get(new_params)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=9RB-jYEbLUU&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SCzlSQi1qWUViTFVVGAYyVSIuIgs5UkItallFYkxVVTAAeAKqAhpVZ3gtRnhWVl91V0NONThjMEhCNEFhQUJBZzABQiFlbmdhZ2VtZW50LXBhbmVsLWNvbW1lbnRzLXNlY3Rpb24%253D (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 16:21:55,139 - new_new_server - ERROR - Error in get_video_comments: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=zGmHBPEwu1c&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SC3pHbUhCUEV3dTFjGAYyOCIRIgt6R21IQlBFd3UxYzAAeAIwAUIhZW5nYWdlbWVudC1wYW5lbC1jb21tZW50cy1zZWN0aW9u (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=zGmHBPEwu1c&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SC3pHbUhCUEV3dTFjGAYyOCIRIgt6R21IQlBFd3UxYzAAeAIwAUIhZW5nYWdlbWVudC1wYW5lbC1jb21tZW50cy1zZWN0aW9u (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1062, in get_video_comments
    comments_data = await youtube_service.get_video_comments(video_id, max_results)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 339, in get_video_comments
    full_resp = await self._serpapi_get(new_params)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=zGmHBPEwu1c&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python&next_page_token=Eg0SC3pHbUhCUEV3dTFjGAYyOCIRIgt6R21IQlBFd3UxYzAAeAIwAUIhZW5nYWdlbWVudC1wYW5lbC1jb21tZW50cy1zZWN0aW9u (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 16:22:25,152 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-22 16:24:09,423 - new_new_server - ERROR - Error getting transcript for video Bxe9pJBXttY: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DBxe9pJBXttY&q=EgQvgeRyGKLwxcYGIjDwWH6A-kPxztvNRQUnOkX0FOtT2gGtIqvDkjU57rxMe_OcMtps8Ypb30J_an-r_gkyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))
urllib3.exceptions.ResponseError: too many 429 error responses

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  [Previous line repeated 7 more times]
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 932, in urlopen
    retries = retries.increment(method, url, response=response, _pool=self)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DBxe9pJBXttY&q=EgQvgeRyGKLwxcYGIjDwWH6A-kPxztvNRQUnOkX0FOtT2gGtIqvDkjU57rxMe_OcMtps8Ypb30J_an-r_gkyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 361, in _fetch_captions_json
    html = self._fetch_video_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 433, in _fetch_video_html
    html = self._fetch_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 442, in _fetch_html
    response = self._http_client.get(WATCH_URL.format(video_id=video_id))
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 724, in send
    history = [resp for resp in gen]
                                ^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 265, in resolve_redirects
    resp = self.send(
        req,
    ...<6 lines>...
        **adapter_kwargs,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 691, in send
    raise RetryError(e, request=request)
requests.exceptions.RetryError: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DBxe9pJBXttY&q=EgQvgeRyGKLwxcYGIjDwWH6A-kPxztvNRQUnOkX0FOtT2gGtIqvDkjU57rxMe_OcMtps8Ypb30J_an-r_gkyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))
2025-09-22 16:24:10,007 - new_new_server - ERROR - Error in get_video_transcript tool: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DBxe9pJBXttY&q=EgQvgeRyGKLwxcYGIjDwWH6A-kPxztvNRQUnOkX0FOtT2gGtIqvDkjU57rxMe_OcMtps8Ypb30J_an-r_gkyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))
urllib3.exceptions.ResponseError: too many 429 error responses

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 942, in urlopen
    return self.urlopen(
           ~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<13 lines>...
        **response_kw,
        ^^^^^^^^^^^^^^
    )
    ^
  [Previous line repeated 7 more times]
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 932, in urlopen
    retries = retries.increment(method, url, response=response, _pool=self)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DBxe9pJBXttY&q=EgQvgeRyGKLwxcYGIjDwWH6A-kPxztvNRQUnOkX0FOtT2gGtIqvDkjU57rxMe_OcMtps8Ypb30J_an-r_gkyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 361, in _fetch_captions_json
    html = self._fetch_video_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 433, in _fetch_video_html
    html = self._fetch_html(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 442, in _fetch_html
    response = self._http_client.get(WATCH_URL.format(video_id=video_id))
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 724, in send
    history = [resp for resp in gen]
                                ^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 265, in resolve_redirects
    resp = self.send(
        req,
    ...<6 lines>...
        **adapter_kwargs,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 691, in send
    raise RetryError(e, request=request)
requests.exceptions.RetryError: HTTPSConnectionPool(host='www.google.com', port=443): Max retries exceeded with url: /sorry/index?continue=https://www.youtube.com/watch%3Fv%3DBxe9pJBXttY&q=EgQvgeRyGKLwxcYGIjDwWH6A-kPxztvNRQUnOkX0FOtT2gGtIqvDkjU57rxMe_OcMtps8Ypb30J_an-r_gkyAnJSWgFD (Caused by ResponseError('too many 429 error responses'))
2025-09-22 16:26:06,039 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:26:15,172 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Business+Inquiry%3A%22+site%3Ayoutube.com+channel+description&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Business+Inquiry%3A%22+site%3Ayoutube.com+channel+description&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Business+Inquiry%3A%22+site%3Ayoutube.com+channel+description&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 16:30:04,115 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:30:55,525 - new_new_server - ERROR - Error in get_video_comments: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=UW5vmc8PrDo&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=UW5vmc8PrDo&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1062, in get_video_comments
    comments_data = await youtube_service.get_video_comments(video_id, max_results)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 326, in get_video_comments
    initial_resp = await self._serpapi_get(params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=UW5vmc8PrDo&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 16:31:20,267 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=qZDV8TZcPe4&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=qZDV8TZcPe4&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=qZDV8TZcPe4&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 16:33:50,361 - new_new_server - ERROR - Error in get_video_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=A3MBFa4phEo&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=A3MBFa4phEo&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 982, in get_video_details
    video_data = await youtube_service.get_video_details(video_id)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 294, in get_video_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=A3MBFa4phEo&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 16:35:00,419 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:35:07,406 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Meecrowave+2025+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Meecrowave+2025+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Meecrowave+2025+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 16:35:56,477 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:36:04,991 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:36:20,701 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:36:36,661 - new_new_server - ERROR - Error in get_channel_details: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Karir+Gaming&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Karir+Gaming&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1021, in get_channel_details
    channel_data = await youtube_service.get_channel_details(channel_name)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 307, in get_channel_details
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Karir+Gaming&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 16:38:14,810 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:38:41,696 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22GAME+LINK%3A+https%3A%2F%2Fwww.roblox.com%2Fgames%2F79546208%22+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22GAME+LINK%3A+https%3A%2F%2Fwww.roblox.com%2Fgames%2F79546208%22+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22GAME+LINK%3A+https%3A%2F%2Fwww.roblox.com%2Fgames%2F79546208%22+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-22 16:39:38,095 - new_new_server - ERROR - Error in search_videos: ('Connection broken: IncompleteRead(5470 bytes read, 3464 more expected)', IncompleteRead(5470 bytes read, 3464 more expected))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 779, in _error_catcher
    yield
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1251, in read_chunked
    chunk = self._handle_chunk(amt)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1197, in _handle_chunk
    returned_chunk = self._fp._safe_read(self.chunk_left)  # type: ignore[union-attr]
  File "/root/miniconda3/lib/python3.13/http/client.py", line 644, in _safe_read
    raise IncompleteRead(data, amt-len(data))
http.client.IncompleteRead: IncompleteRead(5470 bytes read, 3464 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1231, in read_chunked
    with self._error_catcher():
         ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 806, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(5470 bytes read, 3464 more expected)', IncompleteRead(5470 bytes read, 3464 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(5470 bytes read, 3464 more expected)', IncompleteRead(5470 bytes read, 3464 more expected))
2025-09-22 16:40:26,912 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:40:35,707 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:40:39,376 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:41:00,015 - new_new_server - ERROR - Error in search_videos: ('Connection broken: IncompleteRead(5470 bytes read, 2716 more expected)', IncompleteRead(5470 bytes read, 2716 more expected))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 779, in _error_catcher
    yield
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1251, in read_chunked
    chunk = self._handle_chunk(amt)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1197, in _handle_chunk
    returned_chunk = self._fp._safe_read(self.chunk_left)  # type: ignore[union-attr]
  File "/root/miniconda3/lib/python3.13/http/client.py", line 644, in _safe_read
    raise IncompleteRead(data, amt-len(data))
http.client.IncompleteRead: IncompleteRead(5470 bytes read, 2716 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1231, in read_chunked
    with self._error_catcher():
         ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 806, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(5470 bytes read, 2716 more expected)', IncompleteRead(5470 bytes read, 2716 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(5470 bytes read, 2716 more expected)', IncompleteRead(5470 bytes read, 2716 more expected))
2025-09-22 16:42:34,781 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-22 16:44:57,583 - new_new_server - ERROR - Error in get_video_comments: Response ended prematurely
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1248, in read_chunked
    self._update_chunk_length()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1178, in _update_chunk_length
    raise ProtocolError("Response ended prematurely") from None
urllib3.exceptions.ProtocolError: Response ended prematurely

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1062, in get_video_comments
    comments_data = await youtube_service.get_video_comments(video_id, max_results)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 326, in get_video_comments
    initial_resp = await self._serpapi_get(params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: Response ended prematurely
2025-09-23 04:36:34,851 - new_new_server - ERROR - Error in get_video_comments: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1062, in get_video_comments
    comments_data = await youtube_service.get_video_comments(video_id, max_results)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 326, in get_video_comments
    initial_resp = await self._serpapi_get(params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-23 04:36:50,287 - new_new_server - ERROR - Error in get_video_comments: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=eHM1K1JByBI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=eHM1K1JByBI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1062, in get_video_comments
    comments_data = await youtube_service.get_video_comments(video_id, max_results)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 326, in get_video_comments
    initial_resp = await self._serpapi_get(params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube_video&v=eHM1K1JByBI&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-23 04:36:59,199 - new_new_server - ERROR - Error getting transcript for video q4v1qb6X8KI: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 363, in _fetch_captions_json
    innertube_data = self._fetch_innertube_data(video_id, api_key)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 446, in _fetch_innertube_data
    response = self._http_client.post(
        INNERTUBE_API_URL.format(api_key=api_key),
    ...<3 lines>...
        },
    )
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 637, in post
    return self.request("POST", url, data=data, json=json, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-23 04:36:59,963 - new_new_server - ERROR - Error in get_video_transcript tool: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 352, in _fetch
    transcript_list = self.ytt_api.list(video_id)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_api.py", line 127, in list
    return self._fetcher.fetch(video_id)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 356, in fetch
    self._fetch_captions_json(video_id),
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 363, in _fetch_captions_json
    innertube_data = self._fetch_innertube_data(video_id, api_key)
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 446, in _fetch_innertube_data
    response = self._http_client.post(
        INNERTUBE_API_URL.format(api_key=api_key),
    ...<3 lines>...
        },
    )
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 637, in post
    return self.request("POST", url, data=data, json=json, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-23 04:37:27,790 - new_new_server - ERROR - No transcript available for video 5h1cqmEXh_k: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=5h1cqmEXh_k! This is most likely caused by:

Subtitles are disabled for this video

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-09-23 04:37:30,043 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%2299+Nights+in+the+Forest%22+47+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%2299+Nights+in+the+Forest%22+47+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%2299+Nights+in+the+Forest%22+47+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-23 04:38:54,734 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-23 04:40:13,808 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-23 04:43:25,939 - new_new_server - ERROR - Error getting transcript for video FZPfSWFlk0w: ('Connection broken: IncompleteRead(6307 bytes read, 2099 more expected)', IncompleteRead(6307 bytes read, 2099 more expected))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 779, in _error_catcher
    yield
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1251, in read_chunked
    chunk = self._handle_chunk(amt)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1197, in _handle_chunk
    returned_chunk = self._fp._safe_read(self.chunk_left)  # type: ignore[union-attr]
  File "/root/miniconda3/lib/python3.13/http/client.py", line 644, in _safe_read
    raise IncompleteRead(data, amt-len(data))
http.client.IncompleteRead: IncompleteRead(6307 bytes read, 2099 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1231, in read_chunked
    with self._error_catcher():
         ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 806, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(6307 bytes read, 2099 more expected)', IncompleteRead(6307 bytes read, 2099 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 355, in _fetch
    return transcript.fetch()
           ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 137, in fetch
    response = self._http_client.get(self._url)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(6307 bytes read, 2099 more expected)', IncompleteRead(6307 bytes read, 2099 more expected))
2025-09-23 04:43:26,380 - new_new_server - ERROR - Error in get_video_transcript tool: ('Connection broken: IncompleteRead(6307 bytes read, 2099 more expected)', IncompleteRead(6307 bytes read, 2099 more expected))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 779, in _error_catcher
    yield
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1251, in read_chunked
    chunk = self._handle_chunk(amt)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1197, in _handle_chunk
    returned_chunk = self._fp._safe_read(self.chunk_left)  # type: ignore[union-attr]
  File "/root/miniconda3/lib/python3.13/http/client.py", line 644, in _safe_read
    raise IncompleteRead(data, amt-len(data))
http.client.IncompleteRead: IncompleteRead(6307 bytes read, 2099 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1088, in stream
    yield from self.read_chunked(amt, decode_content=decode_content)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 1231, in read_chunked
    with self._error_catcher():
         ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/response.py", line 806, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(6307 bytes read, 2099 more expected)', IncompleteRead(6307 bytes read, 2099 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1106, in get_video_transcript
    transcript_data = await youtube_service.get_video_transcript(video_id, language)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 376, in get_video_transcript
    return await self._run_blocking(_fetch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 355, in _fetch
    return transcript.fetch()
           ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/youtube_transcript_api/_transcripts.py", line 137, in fetch
    response = self._http_client.get(self._url)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 602, in get
    return self.request("GET", url, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 746, in send
    r.content
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 902, in content
    self._content = b"".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b""
                    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(6307 bytes read, 2099 more expected)', IncompleteRead(6307 bytes read, 2099 more expected))
2025-09-23 07:38:57,886 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Nanjing+Bell+%26+Drum&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Nanjing+Bell+%26+Drum&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Nanjing+Bell+%26+Drum&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-23 08:02:49,747 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Introducing+the%22+%22Library+and+Archives%22+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Introducing+the%22+%22Library+and+Archives%22+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Introducing+the%22+%22Library+and+Archives%22+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-23 08:17:32,092 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Brooklyn+2015+filming+locations+Quebec+YouTube+Montreal+Saint-Jean-sur-Richelieu+filming+locations+video&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Brooklyn+2015+filming+locations+Quebec+YouTube+Montreal+Saint-Jean-sur-Richelieu+filming+locations+video&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Brooklyn+2015+filming+locations+Quebec+YouTube+Montreal+Saint-Jean-sur-Richelieu+filming+locations+video&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-23 08:40:43,739 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Merlion+-+Marina+Bay+Sands%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Merlion+-+Marina+Bay+Sands%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Merlion+-+Marina+Bay+Sands%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-23 08:55:08,770 - new_new_server - ERROR - Error in search_videos: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 773, in urlopen
    self._prepare_proxy(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1042, in _prepare_proxy
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 682, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))
2025-09-23 09:10:26,349 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Reuters+YouTube+NASA+archived+data+previously+unrecognized+class+of+gigantic+spiral+galaxies+super+spirals+March+2016+2%3A35+video&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Reuters+YouTube+NASA+archived+data+previously+unrecognized+class+of+gigantic+spiral+galaxies+super+spirals+March+2016+2%3A35+video&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Reuters+YouTube+NASA+archived+data+previously+unrecognized+class+of+gigantic+spiral+galaxies+super+spirals+March+2016+2%3A35+video&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-23 09:14:11,870 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Shoe+%26+Schott%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Shoe+%26+Schott%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Shoe+%26+Schott%22&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-23 09:18:02,540 - new_new_server - ERROR - Error in get_channel_details: 'list' object has no attribute 'get'
Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 1026, in get_channel_details
    'title': channel.get('title'),
             ^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'
2025-09-23 09:21:20,801 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Old+Joe%22+%26+%22Lapworth%22+Museum+walk+University+of+Birmingham+2024+9+minutes&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Old+Joe%22+%26+%22Lapworth%22+Museum+walk+University+of+Birmingham+2024+9+minutes&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=%22Old+Joe%22+%26+%22Lapworth%22+Museum+walk+University+of+Birmingham+2024+9+minutes&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-09-23 09:23:53,640 - new_new_server - ERROR - Error in search_videos: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Smartsheet+Q%26A+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/root/miniconda3/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Smartsheet+Q%26A+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 942, in search_videos
    search_results = await youtube_service.search_videos(query, max_results, **options)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 279, in search_videos
    resp = await self._serpapi_get(params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 267, in _serpapi_get
    return await self._run_blocking(_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 225, in _run_blocking
    return await loop.run_in_executor(self._executor, p)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/mnt/tool_backends/MCP/sse_server/Youtube-Server/new_new_server.py", line 265, in _call
    return gs.get_dict()
           ~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 103, in get_dict
    return self.get_dictionary()
           ~~~~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 96, in get_dictionary
    return dict(self.get_json())
                ~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 83, in get_json
    return json.loads(self.get_results())
                      ~~~~~~~~~~~~~~~~^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 70, in get_results
    return self.get_response(path).text
           ~~~~~~~~~~~~~~~~~^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/serpapi/serp_api_client.py", line 59, in get_response
    response = requests.get(url, parameter, timeout=self.timeout)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/root/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='serpapi.com', port=443): Max retries exceeded with url: /search?engine=youtube&search_query=Smartsheet+Q%26A+site%3Ayoutube.com&api_key=4fb5ff7d0b7e37c4b0bb149c46447f08da5d7f7d3a0012b25adb2ec3b83a0f34&output=json&source=python (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
2025-10-08 15:36:56,569 - new_new_server - INFO - YouTube Toolbox MCP Server 준비 중...
2025-10-08 15:49:11,538 - new_new_server - INFO - YouTube Toolbox MCP Server 준비 중...
